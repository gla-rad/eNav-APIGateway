# Configuration Variables
service.variable.hostname=<service.hostname>
service.variable.eureka.server.name=<eureka.server.name>
service.variable.eureka.server.port=<eureka.server.port>
service.variable.keycloak.server.name=<keycloak.server.name>
service.variable.keycloak.server.port=<keycloak.server.port>
service.variable.keycloak.server.realm=<keycloak.realm>

# Logging Configuration
logging.file.name=/var/log/${spring.application.name}.log
logging.logback.rollingpolicy.max-file-size=10MB
logging.logback.rollingpolicy.file-name-pattern=${spring.application.name}-%d{yyyy-MM-dd}.%i.log

# Management Endpoints
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=when_authorized

# Springdoc configuration
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.packagesToScan=org.grad.eNav.apiGateway.controllers

# Eureka Client Configuration
eureka.client.service-url.defaultZone=http://${service.variable.eureka.server.name}:${service.variable.eureka.server.port}/eureka/
eureka.client.registryFetchIntervalSeconds=5
eureka.instance.preferIpAddress=false
eureka.instance.leaseRenewalIntervalInSeconds=10
eureka.instance.hostname=localhost
eureka.instance.securePortEnabled=true
eureka.instance.nonSecurePortEnabled=false

# Spring-boot Admin Configuration
spring.boot.admin.client.url=http://${service.variable.eureka.server.name}:${service.variable.eureka.server.port}/admin

# Enable route discovery automatically through Eureka
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

# Increase the web-socket sizes
server.max-http-header-size=1000000
server.max-initial-line-length=1000000
server.h2c-max-content-length=10000000
spring.cloud.gateway.httpclient.websocket.max-frame-payload-length=10000000

# Allow CORS for SECOM requests
spring.cloud.gateway.default-filters[0]=DedupeResponseHeader=Access-Control-Allow-Origin Access-Control-Allow-Credentials, RETAIN_FIRST
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedOriginPatterns=*
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedMethods=GET,POST,PUT,DELETE,OPTIONS
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedHeaders=*
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowCredentials=false

# Organisation MRN allowed access via X.509 certificates
gla.rad.api-gateway.x509.organisation.mrn=urn:mrn:mcp:org:mcc

# Keycloak Configuration
spring.security.oauth2.client.registration.keycloak.client-id=api-gateway
spring.security.oauth2.client.registration.keycloak.client-secret=<changeit>
spring.security.oauth2.client.registration.keycloak.client-name=Keycloak
spring.security.oauth2.client.registration.keycloak.provider=keycloak
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.scope=openid
spring.security.oauth2.client.registration.keycloak.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://${service.variable.keycloak.server.name}:${service.variable.keycloak.server.port}/realms/${service.variable.keycloak.server.realm}
spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://${service.variable.keycloak.server.name}:${service.variable.keycloak.server.port}/realms/${service.variable.keycloak.server.realm}

# Add web-socket rewriting configuration
spring.cloud.gateway.routes[0].id=route_no_1
spring.cloud.gateway.routes[0].uri=https://route_no_1_uri/
spring.cloud.gateway.routes[0].predicates[0]=Path=/route_no_1-websocket/**
spring.cloud.gateway.routes[0].filters[0]=RewritePath=/route_no_1-websocket/(?<segment>.*), /client_no_1/route_no_1-websocket/$\{segment}
spring.cloud.gateway.routes[1].id=route_no_2
spring.cloud.gateway.routes[1].uri=https://route_no_2_uri/
spring.cloud.gateway.routes[1].predicates[0]=Path=/route_no_2-websocket/**
spring.cloud.gateway.routes[1].filters[0]=RewritePath=/route_no_2-websocket/(?<segment>.*), /client_no_2/route_no_2-websocket/$\{segment}
server.forward-headers-strategy=framework

# Change the index for PROD and open the appropriate resources
gla.rad.api-gateway.resources.index:classpath:/templates/index.html
gla.rad.api-gateway.resources.open:/,/login,/static/**

# The Server SSL Configuration
server.ssl.enabled=true
server.ssl.key-store=<path.to.keystore>
server.ssl.key-store-password=<changeit>
server.ssl.key-alias=api-gateway
server.ssl.key-password=<changeit>
server.ssl.trust-store=<path.to.struststore>
server.ssl.trust-store-password=<changeit>
server.ssl.client-auth=want